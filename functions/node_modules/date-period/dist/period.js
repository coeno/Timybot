'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _freeze = require('babel-runtime/core-js/object/freeze');

var _freeze2 = _interopRequireDefault(_freeze);

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _from = require('babel-runtime/core-js/array/from');

var _from2 = _interopRequireDefault(_from);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _iterator = require('babel-runtime/core-js/symbol/iterator');

var _iterator2 = _interopRequireDefault(_iterator);

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _dateDuration = require('date-duration');

var _dateDuration2 = _interopRequireDefault(_dateDuration);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var filterDate = function filterDate(date) {
  if (typeof date.toDate === 'function') {
    date = date.toDate();
  }

  if (Object.prototype.toString.call(date) !== '[object Date]') {
    throw new Error('Invalid date');
  }

  return new Date(+date);
};

function createPeriod(_ref) {
  var _period;

  var start = _ref.start,
      duration = _ref.duration,
      end = _ref.end,
      recurrence = _ref.recurrence,
      iso = _ref.iso;

  if (iso) {
    if (typeof iso !== 'string' || iso[0] !== 'R') {
      throw new Error('Invalid period (invalid ISO format)');
    }

    var _iso$split = iso.split(/\//);

    var _iso$split2 = (0, _slicedToArray3.default)(_iso$split, 3);

    recurrence = _iso$split2[0];
    start = _iso$split2[1];
    duration = _iso$split2[2];


    start = new Date(start);
    recurrence = parseInt(recurrence.substr(1), 10);
  }

  start = filterDate(start);

  if ((typeof duration === 'undefined' ? 'undefined' : (0, _typeof3.default)(duration)) === 'object' && typeof duration.toString === 'function') {
    duration = duration.toString();
  }

  duration = (0, _dateDuration2.default)(duration);

  if (end) {
    end = filterDate(end);
  } else if (recurrence) {
    if (typeof recurrence !== 'number') {
      throw new Error('Invalid period (invalid number of recurrences)');
    }
  } else {
    throw new Error('Invalid period (missing end or number of recurrences)');
  }

  if (end && start >= end) {
    throw new Error('Invalid period (end needs to be after start)');
  }

  if (+start === +duration.addTo(start)) {
    throw new Error('Invalid period (no duration)');
  }

  var period = (_period = {}, (0, _defineProperty3.default)(_period, _iterator2.default, _regenerator2.default.mark(function _callee() {
    var date, i;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            date = new Date(+start);
            _context.next = 3;
            return date;

          case 3:

            date = duration.addTo(date);

            if (!end) {
              _context.next = 13;
              break;
            }

          case 5:
            if (!(date < end)) {
              _context.next = 11;
              break;
            }

            _context.next = 8;
            return date;

          case 8:
            date = duration.addTo(date);
            _context.next = 5;
            break;

          case 11:
            _context.next = 21;
            break;

          case 13:
            i = 0;

          case 14:
            if (!(i < recurrence)) {
              _context.next = 21;
              break;
            }

            _context.next = 17;
            return date;

          case 17:
            date = duration.addTo(date);

          case 18:
            i++;
            _context.next = 14;
            break;

          case 21:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  })), (0, _defineProperty3.default)(_period, 'toArray', function toArray() {
    return (0, _from2.default)(period);
  }), (0, _defineProperty3.default)(_period, 'toString', function toString() {
    return 'R' + (period.toArray().length - 1) + '/' + start.toISOString() + '/' + duration;
  }), _period);

  return (0, _freeze2.default)(period);
}

exports.default = createPeriod;
//# sourceMappingURL=period.js.map